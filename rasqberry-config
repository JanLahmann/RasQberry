#!/bin/sh
# Derived from raspi-config https://github.com/RPi-Distro/raspi-config

# Load environment variables
. /home/pi/RasQberry/env-config.sh
# Load external methods
. /home/pi/RasQberry/config/setup.sh
. /home/pi/RasQberry/config/demos.sh
. /home/pi/RasQberry/config/qoffee-maker.sh
. /home/pi/RasQberry/config/getinfo.sh

USER=${SUDO_USER:-$(who -m | awk '{ print $1 }')}

############# CHECK GENERAL INFORMATION ABOUT PI #############

is_pi () {
  ARCH=$(dpkg --print-architecture)
  if [ "$ARCH" = "armhf" ] || [ "$ARCH" = "arm64" ] ; then
    return 0
  else
    return 1
  fi
}

if is_pi ; then
  CMDLINE=/boot/cmdline.txt
else
  CMDLINE=/proc/cmdline
fi

# Everything else needs to be run as root
if [ $(id -u) -ne 0 ]; then
  printf "Script must be run as root. Try 'sudo rasqberry-config'\n"
  exit 1
fi

if [ -n "${OPT_MEMORY_SPLIT:-}" ]; then
  set -e # Fail when a command errors
  set_memory_split "${OPT_MEMORY_SPLIT}"
  exit 0
fi

do_rasqberry_about() {
  whiptail --msgbox "\
This tool provides a straight-forward way of doing initial \
installation and configuration of the RasQberry system. 
 
To setup RasQberry, go through the steps in 'RasQberry Setup' one by one. \
Some of them require a reboot. 
Select either Qiskit version 0.20 or version 0.23 to be installed. 
'Config & Demos' installs and configures several quantum demos. 

'Quantum Demos' offers several Quantum demos - suitable for a \
TFT touchscreen display or a SenseHAT 8x8 LED matrix. " 20 70 1
}

############# GRAPHICAL WHIPTAIL MENUS #############

## 3rd LEVEL MENUS ##

do_rasqberry_install_qiskit() {
  FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "Install Qiskit" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "Q00 Qiskit" "Install Qiskit (latest version)" \
    "Q37 Qiskit 0.37" "Install Qiskit v0.37" \
    "Q36 Qiskit 0.36" "Install Qiskit v0.36" \
    "Q34 Qiskit 0.34" "Install Qiskit v0.34" \
    "Q30 Qiskit 0.30" "Install Qiskit v0.30" \
    "Q29 Qiskit 0.29" "Install Qiskit v0.29" \
    "Q28 Qiskit 0.28" "Install Qiskit v0.28" \
    "Q27 Qiskit 0.27" "Install Qiskit v0.27" \
    "Q25 Qiskit 0.25" "Install Qiskit v0.25" \
    "Q24 Qiskit 0.24" "Install Qiskit v0.24" \
    "Q23 Qiskit 0.23" "Install Qiskit v0.23" \
    "Q20 Qiskit 0.20" "Install Qiskit v0.20" \
    "Q19 Qiskit 0.19     " "Install Qiskit v0.19" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      Q19\ *) do_rasqberry_install_general 019 ;;
      Q20\ *) do_rasqberry_install_general 020 ;;
      Q23\ *) do_rasqberry_install_general 023 ;;
      Q24\ *) do_rasqberry_install_general 024 ;;
      Q25\ *) do_rasqberry_install_general 025 ;;
      Q27\ *) do_rasqberry_install_general 027 ;;
      Q28\ *) do_rasqberry_install_general 028 ;;
      Q29\ *) do_rasqberry_install_general 029 ;;
      Q30\ *) do_rasqberry_install_general 030 ;;
      Q34\ *) do_rasqberry_install_general 034 ;;
      Q36\ *) do_rasqberry_install_general 036 ;;
      Q37\ *) do_rasqberry_install_general 037 ;;
      Q00\ *) do_rasqberry_install_general _latest ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

do_rasqberry_change_environment_file() {
  FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "Change environment file" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "I IBM-Q API Token " "Change your IBM-Q API Token" \
    "Q N_QUBITS " "Change the number of qubits" \
    "L LED_COUNT " "Change the number of LED Pixels" \
    "P LED_PIN " "Change the GPIO Pin connected to pixels" \
    "O Other " "Change other environment variables" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      I\ *) do_menu_update_environment_file IBM_Q_API_TOKEN ;;
      Q\ *) do_menu_update_environment_file N_QUBIT ;;
      L\ *) do_menu_update_environment_file LED_COUNT ;;
      P\ *) do_menu_update_environment_file LED_PIN ;;
      O\ *) nano /home/pi/RasQberry/rasqberry_environment.env ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

## 2nd LEVEL MENUS ##

do_rasqberry_setup() {
  FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "RasQberry setup and configuration" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "IC Initial Config " "Basic configurations (PATH, LOCALE, Python Packages, etc)" \
    "SU System Update " "Update the system and create swapfile" \
    "Q36 Install Qiskit" "Install Qiskit 0.36" \
    "DV Configure Desktop and VNC " "Configure Desktop Layout and enable VNC displays" \
    "CD Config & Demos " "Configure Qiskit and install Quantum Demos" \
    "D Docker" "Install & Enable Docker" \
    "BL Button+LED" "Configure Control-Button + LEDs" \
    "SH Config SenseHAT " "Configure SenseHAT with qrasp autostart" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      IC\ *) do_rq_initial_config ;;
      SU\ *) do_rasqberry_update ;;
      Q36\ *) do_rasqberry_install_general 036 ;;
      DV\ *) do_rasqberry_enable_desktop_vnc ;;
      CD\ *) do_rasqberry_config_demos ;;
      D\ *) do_rq_enable_docker ;;
      BL\ *) do_rq_configure_button ;;
      SH\ *) do_rq_setup_SenseHAT ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

do_rasqberry_demos() {
  FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "RasQberry setup and configuration" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "BS Bloch-Sphere" "Install/Start/Stop the Bloch-Sphere Demo (rec.: enable autostart)" \
    "FR Fractals" "Install/Start the Fractals Demo" \
    "RL RasQ-LED" "Start RasQ-LED demo" \
    "CL Clear LED" "Clear LED Lights" \
    "QM Qoffee-Maker" "Local Build/Start Qoffee-Maker demo" \
    "QMd Qoffee-Maker" "Download/Start Qoffee-Maker image" \
    "RT5 Raspberry-Tie 5" "Install/Start/Stop the Raspberry-Tie Demo" \
    "RT16 Raspberry-Tie 16 " "Raspberry-Tie 16 Qubit Demo" \
    "QR Qrasp " "Install/Start/Stop the Qrasp Demo" \
    "CS Clear SenseHAT" "Clear SenseHAT Display" \
    "UT Update Q Token" "Enter new IBM Quantum Experience Token" \
    "DB Disable Bloch Autostart " "Disable Autostart of Bloch Demo" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      BS\ *) do_rasqberry_run_bloch ;;
      FR\ *) do_rasqberry_run_fractals ;;
      RL\ *) do_RasQ_LED ;;
      CL\ *) do_led_lights_off ;;
      QM\ *) do_rasqberry_Qoffee_local ;;
      QMd\ *) do_rasqberry_Qoffee_download ;;
      RT5\ *) do_rasqberry_run_rasptie_no_network ;;
      RT16\ *) do_rasqberry_run_rasptie16_no_network ;;
      QR\ *) do_rasqberry_run_qrasp ;;
      CS\ *) do_sensehat_display_off ;;
      UT\ *) do_rasqberry_qtoken_update ;;
      DB\ *) do_rasqberry_deactivate_bloch_autostart ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

do_hd_demos() {
  FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "HD Demos" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "QT Qiskit Tutorials - internal browser" "Start jupyter notebook with Qiskit-Tutorials" \
    "FwQ Fun-with-Quantum - internal browser" "Start jupyter notebook with Fun-with-Quantum" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      QT\ *) do_clone_qiskit_start_jupyter ;;
      FwQ\ *) do_clone_fwq_start_jupyter ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

do_advanced_config() {
  FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "Advanced Config" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "Q Install Qiskit " "Install Qiskit (several versions)" \
    "B Switch Branches " "Switch to a different branch of RasQberry" \
    "E Change environment-file" "Change the contents of the environment-file" \
    "QMst stop Qoffee-Maker " "stop all Qoffee-Maker containers" \
    "QMrb Qoffee-Maker rebuild " "force rebuild of Qoffee-Maker images" \
    "4Da Enable 4'' Display " "Setup the 4inch Display - Part 1" \
    "4Db Enable 4'' Display " "Setup the 4inch Display - Part 2" \
    "KV Install Kivy" "Install needed packages for Kivy interface" \
    "LE Enable LED Light" "Setup LED Ring above Kryostat" \
    "LT Toggle LED Light" "Start/Stop LED above Kryostat" \
    "Msg Toggle Messages " "Toggle info message boxes on/off" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      Q\ *) do_rasqberry_install_qiskit ;;
      B\ *) do_rasqberry_switch_branch ;;
      E\ *) do_rasqberry_change_environment_file ;;
      QMst\ *) do_rasqberry_Qoffee_stop ;;
      QMrb\ *) do_rasqberry_Qoffee_rebuild ;;
      4Da\ *) do_rasqberry_enable_touch41 ;;
      4Db\ *) do_rasqberry_enable_touch42 ;;
      KV\ *) do_install_kivy ;;
      LE\ *) do_rasqberry_enable_LED ;;
      LT\ *) do_rasqberry_toggle_LED ;;
      Msg\ *) do_toggle_messages ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

## 1st LEVEL MENU ##

#
# Command line options for non-interactive use
#
for i in $*
do
  case $i in
  --memory-split=*)
    OPT_MEMORY_SPLIT=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
    printf "Not currently supported\n"
    exit 1
    ;;
  --expand-rootfs)
    INTERACTIVE=False
    do_expand_rootfs
    printf "Please reboot\n"
    exit 0
    ;;
  --apply-os-config)
    INTERACTIVE=False
    do_apply_os_config
    exit $?
    ;;
  nonint)
    INTERACTIVE=False
    "$@"
    exit $?
    ;;
  *)
    # unknown option
    ;;
  esac
done

#
# Interactive use loop
#
if [ "$INTERACTIVE" = true ]; then
  [ -e $CONFIG ] || touch $CONFIG
  calc_wt_size
  while [ "$USER" = "root" ] || [ -z "$USER" ]; do
    if ! USER=$(whiptail --inputbox "raspi-config could not determine the default user.\\n\\nWhat user should these settings apply to?" 20 60 pi 3>&1 1>&2 2>&3); then
      return 0
    fi
  done
  while true; do
    if is_pi ; then
      FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --backtitle "$(cat /proc/device-tree/model)" --menu "Setup Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
        "S RasQberry Setup" "RasQberry initial setup and configuration" \
        "D Quantum Demos" "Install and run Quantum Demos" \
        "H HD Demos" "Install and run HD Demos" \
        "A Advanced Config" "Advanced Config" \
        "9 About rasqberry-config " "Information about this configuration tool" \
        3>&1 1>&2 2>&3)
    else
      FUN=$(whiptail --title "RasQberry Configuration Tool (rasqberry-config)" --menu "Setup Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
        "9 About" "Information about this configuration tool" \
        3>&1 1>&2 2>&3)
    fi
    RET=$?
    if [ $RET -eq 1 ]; then
      do_finish
    elif [ $RET -eq 0 ]; then
      if is_pi ; then
        case "$FUN" in
          S\ *) do_rasqberry_setup ;;
          D\ *) do_rasqberry_demos ;;
          H\ *) do_hd_demos ;;
          A\ *) do_advanced_config ;;
          9\ *) do_rasqberry_about ;;
          *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
        esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
      else
        case "$FUN" in
          *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
        esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
      fi
    else
      exit 1
    fi
  done
fi

